name: Zepben Release Build

on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to use for the release'     
        required: false
        type: string


jobs:
  build_linux_x64:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/zepben/dss-capi-builder:latest

    env:
      GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}

    steps:

      - name: Find commit
        id: find-commit
        run: |
          if [ -z ${{ github.event.inputs.branch }} ]
          then
            branch="main"
          else
            branch=${{ github.event.inputs.branch }}
          fi
          echo "BRANCH=$(echo $branch)" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: Work around git permission issue
        run: |
          dname=$(echo ${{github.repository}} | cut -d'/' -f2)
          git config --global --add safe.directory /__w/$dname/$dname
        shell: sh

      - name: Checkout the correct branch
        run: git checkout $BRANCH

      - name: Define the commit the version
        run: |
          version=$(grep -E "## \[[0-9]+\.[0-9]+\.[0-9]\.[0-9]+-zepben\]" changelog.md | grep -v UNRELE | head -n 1 | cut -f2 -d' ' | sed -E 's/\[//g;s/\]//g')
          echo "VERSION=$(echo $version)" >> $GITHUB_ENV
          echo "ARTEFACT=package/dss-libs-$(echo $version).bz2" >> $GITHUB_ENV

      - name: Build the dss libraries
        run: |
          make ci
        shell: bash

      - name: Package the libraries
        run: |
          make package
          mv package/dss-libs.bz2 $ARTEFACT 
        shell: bash
        continue-on-error: false

      - name: Get latest changelog
        id: changelog
        run: |
          lines=$(egrep -n "## \[[0-9]+\.[0-9]+\.[0-9]\.[0-9]+-zepben\]" changelog.md | head -2 | cut -f1 -d:)
          line1=$(echo "$lines" | head -1)
          line2=$(echo "$lines" | tail -1)
          cat changelog.md | tail -n +$((line1+1)) | head -n $((line2-line1-1)) > latest_changelog.txt
        shell: bash
        continue-on-error: false

      - name: Create Release and upload assets
        if: success()
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${VERSION}
          body_path: latest_changelog.txt
          draft: false
          prerelease: false
          files: ${ARTEFACT}
        continue-on-error: false

      - name: Update version for release
        id: check
        run: |
          build/update-changelog.sh $VERSION
        shell: bash
        continue-on-error: false

      - name: Merge and Tag
        id: merge
        run: |
          git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
          git fetch --all
          git branch -a
          git merge origin/release
          git push origin ${GITHUB_REF/refs\/heads\//}
          git tag "v$VERSION"
          git push --tags
        shell: bash
        continue-on-error: true

      - name: Fail if any previous step failed
        if: steps.merge.outcome == 'failure'
        run: |
          git push origin -d release
          echo "There was an error in merging the branch. Release branch was deleted." >> $GITHUB_STEP_SUMMARY
          exit 1
        shell: bash
