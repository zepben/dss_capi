/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: EnergyMeter.proto */

#ifndef PROTOBUF_C_EnergyMeter_2eproto__INCLUDED
#define PROTOBUF_C_EnergyMeter_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Result Result;
typedef struct EnergyMeterResult EnergyMeterResult;


/* --- enums --- */

typedef enum _ResultType {
  RESULT_TYPE__DI = 0,
  RESULT_TYPE__PHV_DI = 1,
  RESULT_TYPE__DI_OVERLOAD = 2,
  RESULT_TYPE__DI_VOLT_EXCEPTIONS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RESULT_TYPE)
} ResultType;

/* --- messages --- */

struct  Result
{
  ProtobufCMessage base;
  /*
   **
   *   A result Name.
   */
  char *name;
  /*
   **
   *   A result value.
   */
  char *value;
};
#define RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&result__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  EnergyMeterResult
{
  ProtobufCMessage base;
  /*
   **
   *    A type
   */
  ResultType type;
  /*
   **
   *   An Energy Meter MRID.
   */
  char *mrid;
  /*
   **
   *   An Energy Meter DI year.
   */
  int32_t year;
  /*
   **
   *   An Energy Meter Results array.
   */
  size_t n_results;
  Result **results;
};
#define ENERGY_METER_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&energy_meter_result__descriptor) \
    , RESULT_TYPE__DI, (char *)protobuf_c_empty_string, 0, 0,NULL }


/* Result methods */
void   result__init
                     (Result         *message);
size_t result__get_packed_size
                     (const Result   *message);
size_t result__pack
                     (const Result   *message,
                      uint8_t             *out);
size_t result__pack_to_buffer
                     (const Result   *message,
                      ProtobufCBuffer     *buffer);
Result *
       result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   result__free_unpacked
                     (Result *message,
                      ProtobufCAllocator *allocator);
/* EnergyMeterResult methods */
void   energy_meter_result__init
                     (EnergyMeterResult         *message);
size_t energy_meter_result__get_packed_size
                     (const EnergyMeterResult   *message);
size_t energy_meter_result__pack
                     (const EnergyMeterResult   *message,
                      uint8_t             *out);
size_t energy_meter_result__pack_to_buffer
                     (const EnergyMeterResult   *message,
                      ProtobufCBuffer     *buffer);
EnergyMeterResult *
       energy_meter_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   energy_meter_result__free_unpacked
                     (EnergyMeterResult *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Result_Closure)
                 (const Result *message,
                  void *closure_data);
typedef void (*EnergyMeterResult_Closure)
                 (const EnergyMeterResult *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    result_type__descriptor;
extern const ProtobufCMessageDescriptor result__descriptor;
extern const ProtobufCMessageDescriptor energy_meter_result__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_EnergyMeter_2eproto__INCLUDED */
